#!/usr/bin/env bash

set -e
set -x


function help() {
    cat << EOF
usage: $0 [OPTIONS]

Setup tools.

OPTIONS:
  help            Show this message
  init            Download and setup dependencies
  render_config   Render the config_template folder
  flash_sd        Flash the sd card
  flash_sd_wifi   Flash the sd card with wifi support
  backup          Import the config from the remote system
  export_config   Renders and exports the config to the target system

EOF
  exit 1
}

CONFIG_TEMPLATE_PATH=$(pwd)/config_template
CONFIG_PATH=$(pwd)/_tmp/config
VAR_FILE_PATH=$(pwd)/.env


function init() {
    rm -rf _tmp
    mkdir _tmp
    mkdir backup
    docker pull ${DOCKER_IMAGE_CONFIGURER}
    wget -O _tmp/flash ${FLASH_SCRIPT}
    chmod +x _tmp/flash
    wget -O _tmp/hypriotos.zip ${HYPRIOTOS_IMAGE}
    unzip _tmp/hypriotos.zip -d _tmp
    mv _tmp/hypriotos-*.img _tmp/hypriotos.img
    touch _tmp/acme.json
    chmod 600 _tmp/acme.json
    render_config
}

function render_config() {
    docker run --rm --volume $CONFIG_TEMPLATE_PATH:/source:ro --volume $CONFIG_PATH:/output --volume $VAR_FILE_PATH:/vars/var_file:ro iago1460/configurer "$@"
}

function flash_sd() {
    ./tools/flash --bootconf ${CONFIG_PATH}/hypriot/bootconf.txt --userdata ${CONFIG_PATH}/hypriot/cloud_init.yml _tmp/hypriotos.img
}

function flash_sd_wifi() {
    ./tools/flash --bootconf ${CONFIG_PATH}/hypriot/bootconf.txt --userdata ${CONFIG_PATH}/hypriot/cloud_init_wifi.yml --config ${CONFIG_PATH}/hypriot/device_init.yml _tmp/hypriotos.img
}

function backup() {
    rsync -r -a -v --delete -e ssh --rsync-path="sudo rsync" pirate@${HOSTNAME}.local:/home/pirate/workspace/config/ ./backup/${HOSTNAME}/
    echo "Data imported"
}


function export_config() {
    render_config

    rsync -a --no-o --no-g -v -z -e ssh ./docker-compose.yml ./.env pirate@${HOSTNAME}.local:/home/pirate/workspace/
    rsync -a --no-o --no-g -r -v -e ssh --rsync-path="sudo rsync" ${CONFIG_PATH}/ pirate@${HOSTNAME}.local:/home/pirate/workspace/config/
    # copy acme.json if it's not present
    rsync --ignore-existing -a --no-o --no-g -v -z -e ssh ./_tmp/acme.json pirate@${HOSTNAME}.local:/home/pirate/workspace/config/traefik/

    echo "Config exported"
}


# Run user entered command at app level, or fallback to docker-compose
if [ "$(type -t $1)" == 'function' ]; then
    func=$1
    shift
    $func "$@"
else
    echo "Unknown command"
    help
fi
exit $?